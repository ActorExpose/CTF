<job id="Install-MicrosoftVisualC++x86x64">
<script language="VBScript" src="ZTIUtility.vbs"/>
<script language="VBScript"> 

'//----------------------------------------------------------------------------
'// Purpose: Used to install Microsoft Visual C++ Redistributable Packages
'// 
'// Usage: cscript Install-MicrosoftVisualC++x86x64.wsf [/debug:true]
'// Version: 1.1 - August 8, 2012 - Johan Arwidmark
'// Version: 2.1 - June 26, 2014 - Mikael Nystrom
'// Version: 2.2 - March 12, 2017 - Johan Arwidmark
'// Version: 2.3 - April 18, 2017 - Henrik Bacher
'// Version: 2.4 - September 6, 2017 - Christoph Voigt
'// Version: 2.5 - October 4, 2018 - Johan Arwidmark
'// Version: 2.5.1 - August 12, 2019 - Baard Hermansen
'// Version: 2.6 - November 27, 2019 - Ram√≥n Isasi
'// 
'// Twitter: @jarwidmark
'// Blog   : http://deploymentresearch.com
'// 
'// Twitter: @mikael_nystrom
'// Blog   : http://deploymentbunny.com
'// 
'// Twitter: @Bacher
'// Blog   : https://nosnik.dk/
'//
'// Twitter: @spucktier
'// 
'// Disclaimer:
'// This script is provided "AS IS" with no warranties, confers no rights and 
'// is not supported by the authors or Deployment Artist.

Option Explicit 
Dim iRetVal 

'On Error Resume Next
iRetVal = ZTIProcess
ProcessResults iRetVal
On Error Goto 0 

'//---------------------------------------------------------------------------
'// Function: ZTIProcess()
'//---------------------------------------------------------------------------
Function ZTIProcess() 

	oLogging.CreateEntry oUtility.ScriptName & ": Starting installation", LogTypeInfo

	Dim sSetupFile2012x86
	Dim sSetupFile2012x64
	Dim sSetupFile2013x86
	Dim sSetupFile2013x64

	Dim sSetupFile2019x86
	Dim sSetupFile2019x64
	
	Dim sArguments

	Dim WshShell
	Dim WshProcEnv
	Dim system_architecture
	Dim process_architecture

	Set WshShell =  CreateObject("WScript.Shell")
	Set WshProcEnv = WshShell.Environment("Process")

	process_architecture = WshProcEnv("PROCESSOR_ARCHITECTURE") 

	If process_architecture = "x86" Then    
		system_architecture = WshProcEnv("PROCESSOR_ARCHITEW6432")

		If system_architecture = ""  Then    
			system_architecture = "x86"
		End if    
	Else    
		system_architecture = process_architecture    
	End If


	'// Disable Zone Checks
	oEnv("SEE_MASK_NOZONECHECKS") = 1 		
	
	'// Note: You need to create the below folder structure and downloading the various redistributable packages from Microsoft
	'// https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads

	sSetupFile2012x86 = oUtility.ScriptDir & "\Source\VS2012\vcredist_x86.exe"
	sSetupFile2012x64 = oUtility.ScriptDir & "\Source\VS2012\vcredist_x64.exe"
	sSetupFile2013x86 = oUtility.ScriptDir & "\Source\VS2013\vcredist_x86.exe"
	sSetupFile2013x64 = oUtility.ScriptDir & "\Source\VS2013\vcredist_x64.exe"
	sSetupFile2019x86 = oUtility.ScriptDir & "\Source\VS2019\vc_redist.x86.exe"
	sSetupFile2019x64 = oUtility.ScriptDir & "\Source\VS2019\vc_redist.x64.exe"
	
	sArguments = "/Q"

	'Checking for x86 files

	If not oFSO.FileExists(sSetupFile2012x86) then
		oLogging.CreateEntry oUtility.ScriptName & ": " & sSetupFile2012x86 & " was not found, unable to install", LogTypeError
		ZTIProcess = Failure
		Exit Function
	End if

	If not oFSO.FileExists(sSetupFile2013x86) then
		oLogging.CreateEntry oUtility.ScriptName & ": " & sSetupFile2013x86 & " was not found, unable to install", LogTypeError
		ZTIProcess = Failure
		Exit Function
	End if
	
	If not oFSO.FileExists(sSetupFile2019x86) then
		oLogging.CreateEntry oUtility.ScriptName & ": " & sSetupFile2019x86 & " was not found, unable to install", LogTypeError
		ZTIProcess = Failure
		Exit Function
	End if

	' Installing x86 files

	'// Installing Visual C++ 2012 x86
	oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile2012x86, LogTypeInfo
	iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile2012x86 & """ " & sArguments)
	
	if (iRetVal = 0) or (iRetVal = 3010) then
		ZTIProcess = Success 
	Else 
		ZTIProcess = Failure
	End If
	
	oLogging.CreateEntry oUtility.ScriptName & ": Return code from command = " & iRetVal, LogTypeInfo
	oLogging.CreateEntry oUtility.ScriptName & ": Finished installation", LogTypeInfo


	'// Modified installation switch due to changes introduced from version 2013 and newer
	sArguments = "/quiet /norestart"

	'// Installing Visual C++ 2013 x86
	oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile2013x86, LogTypeInfo
	iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile2013x86 & """ " & sArguments)
	
	if (iRetVal = 0) or (iRetVal = 3010) then
		ZTIProcess = Success 
	Else 
		ZTIProcess = Failure
	End If
	
	oLogging.CreateEntry oUtility.ScriptName & ": Return code from command = " & iRetVal, LogTypeInfo
	oLogging.CreateEntry oUtility.ScriptName & ": Finished installation", LogTypeInfo


	'// Installing Visual C++ 2019 x86
	oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile2019x86, LogTypeInfo
	iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile2019x86 & """ " & sArguments)
	
	if (iRetVal = 0) or (iRetVal = 3010) then
		ZTIProcess = Success 
	Else 
		ZTIProcess = Failure
	End If
	
	oLogging.CreateEntry oUtility.ScriptName & ": Return code from command = " & iRetVal, LogTypeInfo
	oLogging.CreateEntry oUtility.ScriptName & ": Finished installation", LogTypeInfo
	
	
	' If x64 operating system, also install x64 version	
	If system_architecture = "AMD64" then

		'Checking for x64 files		

		If not oFSO.FileExists(sSetupFile2012x64) then
			oLogging.CreateEntry oUtility.ScriptName & ": " & sSetupFile2012x64 & " was not found, unable to install", LogTypeError
			ZTIProcess = Failure
			Exit Function
		End if

		If not oFSO.FileExists(sSetupFile2013x64) then
			oLogging.CreateEntry oUtility.ScriptName & ": " & sSetupFile2013x64 & " was not found, unable to install", LogTypeError
			ZTIProcess = Failure
			Exit Function
		End if

		If not oFSO.FileExists(sSetupFile2019x64) then
			oLogging.CreateEntry oUtility.ScriptName & ": " & sSetupFile2019x64 & " was not found, unable to install", LogTypeError
			ZTIProcess = Failure
			Exit Function
		End if
		
		'Installing x64 files

		'// Reverting back to old silent installation switch
		sArguments = "/Q"

		'// Installing Visual C++ 2012 x64
		oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile2012x64, LogTypeInfo
		iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile2012x64 & """ " & sArguments)
		
		if (iRetVal = 0) or (iRetVal = 3010) then
			ZTIProcess = Success 
		Else 
			ZTIProcess = Failure
		End If
		
		oLogging.CreateEntry oUtility.ScriptName & ": Return code from command = " & iRetVal, LogTypeInfo
		oLogging.CreateEntry oUtility.ScriptName & ": Finished installation", LogTypeInfo


		'// Modified installation switch due to changes introduced from version 2013 and newer
		sArguments = "/quiet /norestart"

		'// Installing Visual C++ 2013 x64
		oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile2013x64, LogTypeInfo
		iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile2013x64 & """ " & sArguments)
		
		if (iRetVal = 0) or (iRetVal = 3010) then
			ZTIProcess = Success 
		Else 
			ZTIProcess = Failure
		End If
		
		oLogging.CreateEntry oUtility.ScriptName & ": Return code from command = " & iRetVal, LogTypeInfo
		oLogging.CreateEntry oUtility.ScriptName & ": Finished installation", LogTypeInfo


		'// Installing Visual C++ 2019 x64
		oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile2019x64, LogTypeInfo
		iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile2019x64 & """ " & sArguments)
		
		if (iRetVal = 0) or (iRetVal = 3010) then
			ZTIProcess = Success 
		Else 
			ZTIProcess = Failure
		End If
		
		
		oLogging.CreateEntry oUtility.ScriptName & ": Return code from command = " & iRetVal, LogTypeInfo
		oLogging.CreateEntry oUtility.ScriptName & ": Finished installation", LogTypeInfo
	
	End If

	'/// Enable Zone Checks
	oEnv.Remove("SEE_MASK_NOZONECHECKS")
	
End Function 

</script>
</job>
