from flask import Flask, render_template, request, redirect, url_for, abort, Response
from werkzeug.utils import secure_filename
import os
import subprocess

app = Flask(__name__, template_folder="./")
# max file length
app.config['MAX_CONTENT_LENGTH'] = 1024 * 1024 * 128 # 128 MB
# allowed extension
app.config['UPLOAD_EXTENSIONS'] = ["wav"]
# auth code
with open("./md5_rev_flag", "r") as f:
	auth_hash = f.read()

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/', methods=['POST'])
def handle_encrypt():
	if request.form['auth'] != auth_hash:
		abort(403)

	uploaded_file = request.files['file']
	if uploaded_file.filename != '':
		filename = secure_filename(uploaded_file.filename)

		file_name = filename.split(".")[0]
		file_ext = filename.split(".")[-1]

		# check extension
		if file_ext not in app.config['UPLOAD_EXTENSIONS'] :
			abort(400)


		uploaded_file.save(os.path.join("/tmp", filename))

		input_name = os.path.join("/tmp", filename)
		output_name = os.path.join("/tmp", filename).split(".")[0] + "-enc.wav"

		result = subprocess.call(["./encrypt.sh", input_name, output_name])

		if result != 0:
			try :
				os.unlink(input_name)
				os.unlink(output_name)
			except OSError:
				pass
			abort(500)

		with open(output_name, "rb") as f:
			enc_data = f.read()

		response = Response(
			enc_data, 
			mimetype='audio/wav', 
			content_type='application/octet-stream',
		)

		response.headers["Content-Disposition"] = "attachment; filename=%s" % file_name + "-enc.wav"

		try:
			os.unlink(input_name)
			os.unlink(output_name)
		except OSError:
			pass
		
		return response 
	else :
		return redirect(url_for('index'))

if __name__=='__main__':
    app.run(port = 13101, host='0.0.0.0')